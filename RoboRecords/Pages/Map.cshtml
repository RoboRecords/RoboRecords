@page
@using RoboRecords.Models
@model RoboRecords.Pages.Map

@{
    var actString = "";
    if (Map.CurrentLevel.Act > 0)
    {
        actString = " " + Map.CurrentLevel.Act;
    }
    ViewData["Title"] = @Map.CurrentLevel.LevelName + actString;
}

<!DOCTYPE html>

<!--
 Map.cshtml: FrontEnd for the games website's page
 Copyright (C) 2021, Lemin <Leminn>, Refrag <R3FR4G> and Ors <Riku-S>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 See the 'LICENSE' file for more details.
-->


<html lang="en">
<body>

<div class="text-center">
    <h1 class="title-font">@Map.CurrentGame.Name</h1>
    <h2 class="title-font">@Map.CurrentLevel.LevelName 
        @if (Map.CurrentLevel.Act > 0)
        {
            <span>act</span>
            <span class="title-font-number" style="font-size: 64px"> @Map.CurrentLevel.Act </span>
        }</h2>
    <input type="button" onclick="location.href='@String.Format("/Submit?game={0}", Map.CurrentGame.UrlName)';" value="Submit a replay" /><br><br>
    
</div>

<script type="text/javascript">
function downloadReplay(record)
{    
    console.log(record)
    
    let oReq = new XMLHttpRequest();
    oReq.open("POST", '?handler=Replay', true);
    oReq.responseType = "arraybuffer";
    
    let filename = "replay.lmp";
    
    oReq.onload = function (oEvent) {
        let data = oReq.response; // Note: not oReq.responseText
        if (data) {
            let byteArray = new Uint8Array(data);
            // File download, a lot of help and copy-pasted code from https://www.stefanjudis.com/snippets/how-trigger-file-downloads-with-javascript/
            //let disposition = request.getResponseHeader("content-disposition");
            //let filename_start = disposition.indexOf("filename=") + "filename=".length;
            //let string_from_filename = disposition.substr(filename_start, disposition.length);
            //let filename_end = string_from_filename.indexOf(";");
            //let filename = string_from_filename.substr(0, filename_end);
            
            makeFile = function (text) {
                let f = new Blob([text], {type: 'text/plain'});
                return window.URL.createObjectURL(f);
            }
            let link = document.createElement('a');
            link.setAttribute('download', filename);
            link.style.display = "none";
            link.href = makeFile(byteArray);
            link.innerHTML = "Download " + filename;
            document.body.appendChild(link);
            link.click();
            
            setTimeout(() => {
                URL.revokeObjectURL(link.href);
                link.parentNode.removeChild(link);
            }, 0);
        }
    };
    
    oReq.onreadystatechange = function() {
        if(this.readyState === this.HEADERS_RECEIVED) {
            // File download, a lot of help and copy-pasted code from https://www.stefanjudis.com/snippets/how-trigger-file-downloads-with-javascript/
            let disposition = oReq.getResponseHeader("content-disposition");
            let filename_start = disposition.indexOf("filename=") + "filename=".length;
            let string_from_filename = disposition.substr(filename_start, disposition.length);
            let filename_end = string_from_filename.indexOf(";");
            filename = string_from_filename.substr(0, filename_end);
        }
    }
    
    oReq.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    oReq.send(JSON.stringify({DbId: record}));
    
    // $.ajax({
    //     type: 'POST',
    //     url: '?handler=Replay',
    //     contentType: "blob",
    //     data: JSON.stringify({ 
    //         DbId: record
    //     }),
    //     success: function (data, textStatus, request) {
    //
    //     },
    //     error: function (error) {
    //     }
    // })
}
</script>


<div style="position: center">
@if (!Map.CurrentLevel.Nights)
{
    <table style="margin: auto">
        <tr class="title-font" style="text-align: center">
            <th style="font-weight: unset">

            </th>
            <th style="font-weight: unset">
                Player
            </th>
            <th style="font-weight: unset">
                WR Time
            </th>
            <th style="font-weight: unset">
                Version
            </th>
            <th style="font-weight: unset">
                Date
            </th>
            <th>

            </th>
        </tr>
        @foreach (var character in CharacterManager.StandardCharacters)
        {
            var record = Map.CurrentLevel.GetBestRecord(character);
            if (record is not null)
            {
                var listName = "list_" + character.NameId;


                <tr>
                    <td class="row-link" onclick="toggle('@listName')">
                        <img src=@character.IconUrl alt=@character.Name width="32px"> @character.Name
                    </td>
                    <td>
                        <a href=@String.Format("/Users/{0}", record.Uploader.DbId) style="color: white;">
                            @record.Uploader.UserNameNoDiscrim
                        </a>
                    </td>
                    <td style="text-align: right">
                        <span class="number-display" style="font-size: x-large"> @RoboRecord.GetTimeFromTics(record.Tics) </span>
                    </td>
                    <td>
                        @record.VersionString
                    </td>
                    <td>
                        @record.UploadTime.ToString("d")
                    </td>
                    <td>
                        <a onclick="downloadReplay(@record.DbId)" href="#">
                            <img class="icon-link" src="../assets/images/icons/download.png" alt="DL" width="32px">
                        </a>
                    </td>
                </tr>

                <tr style="margin: 0; height: 0"></tr>
                <tr class="hide-at-start" style="text-align: center;" id=@listName>
                    <td colspan="6">
                        <span class="title-font">Records for @character.Name</span>
                        <table style="margin: auto">
                            <tr class="title-font">
                                <th>

                                </th>
                                <th style="font-weight: unset">
                                    Player
                                </th>
                                <th style="font-weight: unset">
                                    Time
                                </th>
                                <th style="font-weight: unset">
                                    Version
                                </th>
                                <th style="font-weight: unset">
                                    Date
                                </th>
                                <th>

                                </th>
                            </tr>
                            @foreach (var characterRecord in Map.CurrentLevel.GetCharacterRecords(character))
                            {
                                <tr>
                                    <td>
                                        <img src=@character.IconUrl alt=@character.Name width="32px">
                                    </td>
                                    <td>
                                        <a href=@String.Format("/Users/{0}", characterRecord.Uploader.DbId) style="color: white;">
                                            @characterRecord.Uploader.UserNameNoDiscrim
                                        </a>
                                    </td>
                                    <td style="text-align: right">
                                        <span class="number-display" style="font-size: x-large"> @RoboRecord.GetTimeFromTics(characterRecord.Tics) </span>
                                    </td>
                                    <td>
                                        @characterRecord.VersionString
                                    </td>
                                    <td>
                                        @characterRecord.UploadTime.ToString("d")
                                    </td>
                                    <td>
                                        <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">
                                            <img class="icon-link" src="../assets/images/icons/download.png" alt="DL" width="32px">
                                        </a>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td colsplan="6"></td>
                            </tr>
                        </table>
                    </td>
                </tr>
            }
        }
        <tr>
            <td colspan="6">
                Click a character to open their leaderboards.
            </td>
        </tr>
    </table>
}
else
{
    <h2 class="title-font" style="text-align: center;">Time records</h2>
    <table style="margin: auto">
        <tr class="title-font" style="text-align: center">
            <th style="font-weight: unset">

            </th>
            <th style="font-weight: unset">
                Player
            </th>
            <th style="font-weight: unset">
                Time
            </th>
            <th style="font-weight: unset">
                Version
            </th>
            <th style="font-weight: unset">
                Date
            </th>
            <th>

            </th>
        </tr>
        @foreach (var record in Map.CurrentLevel.GetAllBestTimes())
        {
            if (record is not null)
            {
                var listName = "list_" + record.Character.NameId;


                <tr>
                    <td>
                        <img src=@record.Character.IconUrl alt=@record.Character.Name width="32px">
                    </td>
                    <td>
                        <a href=@String.Format("/Users/{0}", record.Uploader.DbId) style="color: white;">
                            @record.Uploader.UserNameNoDiscrim
                        </a>
                    </td>
                    <td style="text-align: right">
                        <span class="number-display" style="font-size: x-large"> @RoboRecord.GetTimeFromTics(record.Tics) </span>
                    </td>
                    <td>
                        @record.VersionString
                    </td>
                    <td>
                        @record.UploadTime.ToString("d")
                    </td>
                    <td>
                        <a onclick="downloadReplay(@record.DbId)" href="#">
                            <img class="icon-link" src="../assets/images/icons/download.png" alt="DL" width="32px">
                        </a>
                    </td>
                </tr>
            }
        }
        <tr>
            <td colspan="6">
                    
            </td>
        </tr>
    </table>
        
    <h2 class="title-font" style="text-align: center;">Score records</h2>
        
    <table style="margin: auto">
        <tr class="title-font" style="text-align: center">
            <th style="font-weight: unset">

            </th>
            <th style="font-weight: unset">
                Player
            </th>
            <th style="font-weight: unset">
                Score
            </th>
            <th style="font-weight: unset">
                Version
            </th>
            <th style="font-weight: unset">
                Date
            </th>
            <th>

            </th>
        </tr>
        @foreach (var record in Map.CurrentLevel.GetAllBestScores())
        {
            if (record is not null)
            {
                var listName = "list_" + record.Character.NameId;


                <tr>
                    <td>
                        <img src=@record.Character.IconUrl alt=@record.Character.Name width="32px">
                    </td>
                    <td>
                        <a href=@String.Format("/Users/{0}", record.Uploader.DbId) style="color: white;">
                            @record.Uploader.UserNameNoDiscrim
                        </a>
                    </td>
                    <td style="text-align: right">
                        @record.Score
                    </td>
                    <td>
                        @record.VersionString
                    </td>
                    <td>
                        @record.UploadTime.ToString("d")
                    </td>
                    <td>
                        <a onclick="downloadReplay(@record.DbId)" href="#">
                            <img class="icon-link" src="../assets/images/icons/download.png" alt="DL" width="32px">
                        </a>
                    </td>
                </tr>
            }
        }
        <tr>
            <td colspan="6">
                    
            </td>
        </tr>
    </table>
}
</div>
<br/>
<br/>

</body>

<style>
    nav {
    background: linear-gradient(180deg, rgba(2,0,36,1) 0%, rgba(0,15,149,1) 100%);
    }
    footer {
     
    }
    body {
      background: linear-gradient( rgba(0, 0, 0, 0.50), rgba(0, 0, 0, 75) ), url(@Map.CurrentGame.IconPath) center;
      background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    }
    table
    {
    
    }
    tr:nth-child(even)
    {
        background: rgba(32, 32, 32, 0.50);
    }
    tr:nth-child(odd)
    {
        background: rgba(64, 64, 64, 0.50);
    }
    tr:first-child th:first-child
    {
        border-radius: 0.6em 0 0 0;
    }
    tr:first-child th:last-child
    {
        border-radius: 0 0.6em 0 0;
    }
    tr:first-child
    {
        background-color: #404040;
    }
    tr:last-child td:first-child
    {
        background: rgba(32, 32, 32, 0.50);
        border-radius: 0 0 0.6em 0.6em;
        padding: 15px;
    }
    td, th
    {
    padding-left: 15px;
    padding-right: 15px;
    }
</style>
</html>